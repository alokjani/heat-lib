heat_template_version: 2015-10-15

description: >
  Base template for software config deployment

parameters:

  instance:
    type: string
    description: The instance where this Software Configuration should be applied
    constraints:
      - custom_constraint: nova.server

resources:

  install:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
        - name: status
      config: { get_file: scripts/PACKAGE_NAME/install.sh }

  install_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: { get_resource: install }
      server: { get_param: instance }
      signal_transport: HEAT_SIGNAL

  config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
        - name: status
      config: { get_file: scripts/PACKAGE_NAME/configure.sh }

  config_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: install_deployment
    properties:
      config: { get_resource: config }
      server: { get_param: instance }
      signal_transport: HEAT_SIGNAL

  start:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
        - name: status
      config: { get_file: scripts/PACKAGE_NAME/start.sh }

  start_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: config_deployment
    properties:
      config: { get_resource: start }
      server: { get_param: instance }
      signal_transport: HEAT_SIGNAL

outputs:
  install_status:
    value: { get_attr: [install_deployment, status] }

  install_stderr:
    value: { get_attr: [install_deployment, deploy_stderr] }

  config_status:
    value: { get_attr: [config_deployment, status] }

  config_stderr:
    value: { get_attr: [config_deployment, deploy_stderr] }

  start_status:
    value: { get_attr: [start_deployment, status] }

  start_stderr:
    value: { get_attr: [start_deployment, deploy_stderr] }
